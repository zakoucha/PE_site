# Generated by Django 5.1.5 on 2025-05-21 16:20

import django.contrib.postgres.fields
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ContactMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('message', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('address', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Equipment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('storage_location', models.CharField(max_length=100)),
                ('condition', models.CharField(choices=[('excellent', 'Excellent'), ('good', 'Good'), ('fair', 'Fair'), ('poor', 'Poor')], default='good', max_length=20)),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='equipment', to=settings.AUTH_USER_MODEL)),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='equipment', to='lessons.school')),
            ],
        ),
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('file', models.FileField(blank=True, null=True, upload_to='lesson_files/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('cover', models.ImageField(blank=True, null=True, upload_to='covers/')),
                ('activity_type', models.CharField(choices=[('warmup', 'Warm-up'), ('main', 'Main Activity'), ('game', 'Game'), ('skill', 'Skill Development'), ('cool', 'Cool-down')], default='main', max_length=20)),
                ('grade_level', models.IntegerField(choices=[(1, 'Grade 1'), (2, 'Grade 2'), (3, 'Grade 3'), (4, 'Grade 4'), (5, 'Grade 5')], default=1)),
                ('duration', models.PositiveIntegerField(default=30, help_text='Duration in minutes')),
                ('age_group', models.CharField(blank=True, choices=[('child', 'Child (6-12)'), ('teen', 'Teen (13-19)'), ('adult', 'Adult (20+)')], max_length=20, null=True)),
                ('objectives', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=20), blank=True, default=list, help_text='Learning objectives', size=None)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lessons', to=settings.AUTH_USER_MODEL)),
                ('equipment_needed', models.ManyToManyField(blank=True, related_name='lessons', to='lessons.equipment')),
            ],
            options={
                'ordering': ['-created_at'],
                'permissions': [('special_status', 'Can read all lessons')],
            },
        ),
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('duration', models.PositiveIntegerField(help_text='Duration in minutes')),
                ('activity_type', models.CharField(choices=[('warmup', 'Warm-up'), ('main', 'Main Activity'), ('cool', 'Cool-down'), ('game', 'Game'), ('skill', 'Skill Development')], default='main', max_length=20)),
                ('intensity_level', models.CharField(choices=[('low', 'Low'), ('moderate', 'Moderate'), ('high', 'High')], max_length=20)),
                ('grade_level', models.IntegerField(choices=[(1, 'Grade 1'), (2, 'Grade 2'), (3, 'Grade 3'), (4, 'Grade 4'), (5, 'Grade 5')], default=1)),
                ('objectives', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=20), blank=True, default=list, size=None)),
                ('image', models.ImageField(blank=True, null=True, upload_to='activity_images/')),
                ('equipment_needed', models.ManyToManyField(blank=True, to='lessons.equipment')),
                ('lesson', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='activities', to='lessons.lesson')),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('review', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to=settings.AUTH_USER_MODEL)),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='lessons.lesson')),
                ('likes', models.ManyToManyField(blank=True, related_name='liked_reviews', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='lessons.review')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SafetyRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('category', models.CharField(choices=[('general', 'General Safety'), ('equipment', 'Equipment Use'), ('emergency', 'Emergency Procedures')], max_length=20)),
                ('reference', models.URLField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='lessons_profile', to=settings.AUTH_USER_MODEL)),
                ('school', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='lessons.school')),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('grade_level', models.IntegerField(choices=[(1, 'Grade 1'), (2, 'Grade 2'), (3, 'Grade 3'), (4, 'Grade 4'), (5, 'Grade 5')])),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lessons.school')),
            ],
        ),
        migrations.CreateModel(
            name='SkillAssessment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('skill', models.CharField(choices=[('throw', 'Throwing'), ('catch', 'Catching'), ('run', 'Running'), ('jump', 'Jumping'), ('strike', 'Striking')], max_length=20)),
                ('score', models.IntegerField(choices=[(1, 'Beginning'), (2, 'Developing'), (3, 'Proficient'), (4, 'Advanced')])),
                ('notes', models.TextField(blank=True)),
                ('date', models.DateField(auto_now_add=True)),
                ('assessed_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='skills_assessed', to='lessons.student')),
            ],
        ),
        migrations.CreateModel(
            name='CurriculumDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version', models.PositiveIntegerField(default=1)),
                ('is_current', models.BooleanField(default=True)),
                ('changelog', models.TextField(blank=True, help_text='Describe changes from previous version')),
                ('grade', models.IntegerField(choices=[(1, 'Grade 1'), (2, 'Grade 2'), (3, 'Grade 3'), (4, 'Grade 4'), (5, 'Grade 5')])),
                ('document_type', models.CharField(choices=[('session_sheet', 'Session Sheet'), ('annual_program', 'Annual Program'), ('annual_distribution', 'Annual Distribution'), ('trimester_clip', 'Trimester Clip'), ('curriculum', 'Physical Education Curriculum')], max_length=20)),
                ('trimester', models.IntegerField(blank=True, choices=[(1, 'First'), (2, 'Second'), (3, 'Third')], null=True)),
                ('academic_year', models.CharField(max_length=9)),
                ('title', models.CharField(max_length=200)),
                ('file', models.FileField(upload_to='curriculum_documents/')),
                ('upload_date', models.DateTimeField(auto_now_add=True)),
                ('previous_version', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='next_versions', to='lessons.curriculumdocument')),
                ('uploaded_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='uploaded_documents', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['grade', 'document_type', '-version'],
                'unique_together': {('grade', 'document_type', 'academic_year', 'version')},
            },
        ),
        migrations.AddIndex(
            model_name='lesson',
            index=models.Index(fields=['id'], name='id_index'),
        ),
        migrations.AddIndex(
            model_name='lesson',
            index=models.Index(fields=['grade_level'], name='grade_level_index'),
        ),
        migrations.AddIndex(
            model_name='lesson',
            index=models.Index(fields=['activity_type'], name='activity_type_index'),
        ),
        migrations.AlterUniqueTogether(
            name='skillassessment',
            unique_together={('student', 'skill', 'date')},
        ),
    ]
